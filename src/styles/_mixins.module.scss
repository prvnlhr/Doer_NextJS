@import "./variables.module";

@mixin hide-scrollbar {
  &::-webkit-scrollbar {
    display: none;
  }
}

@mixin font-smoothing {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin overflow-scroll-touch {
  -webkit-overflow-scrolling: touch;
}

@mixin remove-touch-blue-highlight {
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-cleftout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

@mixin fhw {
  height: 100%;
  width: 100%;
}

@mixin card-bg-shadow {
  box-shadow: $card-box-shadow;
  background-color: $card-bg;
}

@mixin flex-container(
  $justify-content: flex-start,
  $align-items: flex-start,
  $direction: row,
  $wrap: nowrap
) {
  display: flex;
  justify-content: $justify-content;
  align-items: $align-items;
  flex-direction: $direction;
  flex-wrap: $wrap;
}

// @mixin flex(
//   $justify: flex-start,
//   $align: flex-start,
//   $dir: row,
//   $wrap: nowrap
// ) {
//   display: flex;
//   justify-content: $justify;
//   align-items: $align;
//   flex-direction: $dir;
//   flex-wrap: $wrap;
// }

@mixin border($size: 1px, $type: solid, $color: black) {
  border: $size $type $color;
}

@mixin radius($val: 3px) {
  border-radius: $val;
}

@mixin scroll($dir: y, $display: none) {
  @if $dir == y {
    overflow-y: scroll;
  } @else if $dir == x {
    overflow-x: scroll;
  }

  @if $display == none {
    &::-webkit-scrollbar {
      display: none;
    }
  } @else if $display== show {
    &::-webkit-scrollbar {
      width: 0.18rem;
    }

    &::-webkit-scrollbar-track {
      background-color: rgba(226, 226, 226, 0.352);
    }

    &::-webkit-scrollbar-thumb {
      background-color: $scrollbar-color;
      border-radius: 5px;
    }

    &::-webkit-scrollbar-thumb:hover {
      background-color: #8be514;
    }
  }
}

@mixin transistion($type: left, $time: 0.5s) {
  transition: $type $time ease-in-out;
  -webkit-transition: $type $time ease-in-out;
  -moz-transition: $type $time ease-in-out;
  -o-transition: $type $time ease-in-out;
  -ms-transition: $type $time ease-in-out;
}

@mixin border {
  border: 1px solid #d0d5dd;
}

@mixin flex($verticalPos, $horizontalPos, $direction: row) {
  
  @if $direction == row {
    // Flex direction row
    @if $verticalPos == top {
      align-items: flex-start;
    } @else if $verticalPos == center {
      align-items: center;
    } @else if $verticalPos == bottom {
      align-items: flex-end;
    }

    @if $horizontalPos == left {
      justify-content: flex-start;
    } @else if $horizontalPos == center {
      justify-content: center;
    } @else if $horizontalPos == right {
      justify-content: flex-end;
    } @else if $horizontalPos == sb {
      justify-content: space-between;
    } @else if $horizontalPos == sa {
      justify-content: space-around;
    } @else if $horizontalPos == se {
      justify-content: space-evenly;
    }

    flex-direction: row;
  } @else if $direction == column {
    // Flex direction column
    @if $verticalPos == top {
      justify-content: flex-start;
      align-items: flex-start;
    } @else if $verticalPos == center {
      justify-content: center;
      align-items: center;
    } @else if $verticalPos == bottom {
      justify-content: flex-end;
      align-items: flex-start;
    }

    @if $horizontalPos == left {
      align-items: flex-start;
    } @else if $horizontalPos == center {
      align-items: center;
    } @else if $horizontalPos == right {
      align-items: flex-end;
    } @else if $horizontalPos == sb {
      justify-content: space-between;
      align-items: center; // Adjusted for center alignment in space-between
    } @else if $horizontalPos == sa {
      justify-content: space-around;
      align-items: center; // Adjusted for center alignment in space-around
    } @else if $horizontalPos == se {
      justify-content: space-evenly;
      align-items: center; // Adjusted for center alignment in space-evenly
    }

    flex-direction: column;
  }

  display: flex;
}
